class Solution {
public:
int countpaths(int i,int j,int n,int m,vector<vector<int>>&dp)
{
    if(i>=n || j>=m)
    return 0;
    if(i==n-1 && j==m-1)
    return 1;
    if(dp[i][j]!=-1)return dp[i][j];
    else return dp[i][j]=(countpaths(i+1,j,n,m,dp)+countpaths(i,j+1,n,m,dp));
}
    int uniquePaths(int m, int n) 
    {
        int i=0,j=0;
        vector<vector<int>>dp(n, vector<int>(m, -1));
        int yami=countpaths(i,j,n,m,dp);
        return yami;
    }
};
